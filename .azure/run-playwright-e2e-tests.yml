parameters:
  - name: testTag
    displayName: 'Test Tag'
    type: string
    default: 'all'
    values:
      - 'all'
      - 'smoke'
      - 'regression'
      - 'e2e'
      - 'functional'
      - 'visual'
      - 'validation'
      - 'state-management'

  - name: environment
    displayName: 'Environment'
    type: string
    default: 'dev'
    values:
      - 'dev'

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKER_IMAGE: 'playwright-container'

steps:
  - checkout: self

  - ${{ if eq(parameters.environment, 'dev') }}:
    - script: |
        echo "##vso[task.setvariable variable=AZURE_SUBSCRIPTION]DTS-SHAREDSERVICES-DEV"
        echo "##vso[task.setvariable variable=KEYVAULT_NAME]pre-hmctskv-dev"
      name: setKeyVault
      displayName: 'Set KeyVault Name and Azure Subscription for Dev'

  - task: AzureKeyVault@2
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      KeyVaultName: $(KEYVAULT_NAME)
      SecretsFilter: |
        pre-power-app-base-url
        pre-api-url
        pre-level-1-test-login-email
        pre-level-1-test-login-password
        cvp-settings-base-url
        cvp-conference-base-url
        cvp-user-login-email
        cvp-user-login-password
        cvp-conference-user-email
        cvp-service-id
        cvp-location-code
    name: FetchSecrets
    displayName: 'Fetch secrets from Azure Key Vault'

  - script: |
      echo "Writing secrets to .env (values hidden)..."
      {
        echo "BASE_URL=$(pre-power-app-base-url)"
        echo "API_URL=$(pre-api-url)"
        echo "PRE_LEVEL_1_USER_EMAIL=$(pre-level-1-test-login-email)"
        echo "PRE_LEVEL_1_USER_PASSWORD=$(pre-level-1-test-login-password)"
        echo "CVP_SETTINGS_BASE_URL=$(cvp-settings-base-url)"
        echo "CVP_CONFERENCE_BASE_URL=$(cvp-conference-base-url)"
        echo "CVP_USER_EMAIL=$(cvp-user-login-email)"
        echo "CVP_USER_PASSWORD=$(cvp-user-login-password)"
        echo "CVP_CONFERENCE_USER_EMAIL=$(cvp-conference-user-email)"
        echo "CVP_SERVICE_ID=$(cvp-service-id)"
        echo "CVP_LOCATION_CODE=$(cvp-location-code)"
      } > .env
      echo ".env file created with $(wc -l < .env) entries"
    displayName: 'Create .env file from KeyVault secrets'

  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - script: |
      yarn install
      yarn setup
    displayName: 'Install dependencies and Playwright browsers'

  - script: |
      yarn build-container
    displayName: 'Build Docker container'

  - script: |
      yarn start-container &
      
      CONTAINER_ID=$(docker ps -q --filter ancestor=$DOCKER_IMAGE)
      
      for i in {1..15}; do
        if docker exec $CONTAINER_ID echo "ready" >/dev/null 2>&1; then
          echo "Container is ready!"
          break
        fi
        echo "Waiting for container..."
        sleep 2
      done
      
      docker ps
    displayName: 'Start Docker container'

  - script: |
      CONTAINER_ID=$(docker ps -q --filter ancestor=$DOCKER_IMAGE)
      if [ "${{ parameters.testTag }}" = "all" ]; then
        docker exec $CONTAINER_ID npx playwright test --reporter=html --output=/playwright/playwright-report
      else
        docker exec $CONTAINER_ID npx playwright test --grep=@${{ parameters.testTag }} --reporter=html --output=/playwright/playwright-report
      fi

      # Copy JUnit XML results to pipeline workspace
      docker cp $CONTAINER_ID:/playwright/test-results/results.xml $(System.DefaultWorkingDirectory)/test-results/results.xml
    displayName: 'Run Playwright tests in Docker'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results/results.xml'
      testRunTitle: 'Playwright Test Results'
      publishRunAttachments: true
    condition: succeededOrFailed()
    displayName: 'Publish Playwright XML Test Results'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/playwright-report'
      artifact: 'PlaywrightHTMLReport'
      publishLocation: 'pipeline'
    displayName: 'Publish Playwright HTML Report and assets'