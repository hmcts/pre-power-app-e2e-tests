name: ${{ parameters.environment }}.${{ parameters.testTag }}.$(Build.SourceBranchName).$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

parameters:
  - name: testTag
    displayName: 'Test Tag'
    type: string
    default: 'Run-All-Tests'
    values:
      - 'Run-All-Tests'
      - 'Smoke'
      - 'Regression'
      - 'E2E'
      - 'Functional'
      - 'Visual'
      - 'Validation'
      - 'State-Management'

  - name: environment
    displayName: 'Environment'
    type: string
    default: 'Dev'
    values:
      - 'Dev'
      - 'Stg'
      - 'Demo'

  - name: playwrightWorkers
    displayName: 'Playwright Workers'
    type: number
    default: 4

pool:
  name: 'hmcts-sds-ptl'

variables:
  - name: AZURE_SUBSCRIPTION
    value: 'DTS-SHAREDSERVICES-${{ upper(parameters.environment) }}-Pre-Recorded Evidence'
  - name: KEYVAULT_NAME
    value: 'pre-hmctskv-${{ lower(parameters.environment) }}'

steps:
  - checkout: self

  - task: AzureKeyVault@2
    inputs:
      azureSubscription: 'DTS-SHAREDSERVICES-TEST'
      KeyVaultName: 'pre-hmctskv-test'
      SecretsFilter: 'pre-level-1-test-login-email,pre-level-1-test-login-password,cvp-settings-base-url,cvp-conference-base-url,cvp-user-login-email,cvp-user-login-password,cvp-conference-user-email,cvp-service-id,cvp-location-code'
    displayName: 'Fetch Common Secrets From Azure Key Vault'  
  
  - task: AzureKeyVault@2
    inputs:
      azureSubscription: ${{ variables.AZURE_SUBSCRIPTION }}
      KeyVaultName: ${{ variables.KEYVAULT_NAME }}
      SecretsFilter: 'pre-power-app-base-url,pre-api-url'
    displayName: 'Fetch Env Specific Secrets From Azure Key Vault'

  - script: |
      sudo apt-get update -y
      yarn install
      yarn setup
    displayName: 'Install dependencies and Playwright browsers'

  - script: |
      if [ "${{ parameters.testTag }}" = "Run-All-Tests" ]; then
        yarn playwright test 
      else
        yarn playwright test --grep=@${{ lower(parameters.testTag) }} 
      fi
    displayName: 'Run Playwright tests'
    env:
      CI: 'true'
      FUNCTIONAL_TESTS_WORKERS: ${{ parameters.playwrightWorkers }}
      BASE_URL: $(pre-power-app-base-url)
      API_URL: $(pre-api-url)
      PRE_LEVEL_1_USER_EMAIL: $(pre-level-1-test-login-email)
      PRE_LEVEL_1_USER_PASSWORD: $(pre-level-1-test-login-password)
      CVP_SETTINGS_BASE_URL: $(cvp-settings-base-url)
      CVP_CONFERENCE_BASE_URL: $(cvp-conference-base-url)
      CVP_USER_EMAIL: $(cvp-user-login-email)
      CVP_USER_PASSWORD: $(cvp-user-login-password)
      CVP_CONFERENCE_USER_EMAIL: $(cvp-conference-user-email)
      CVP_SERVICE_ID: $(cvp-service-id)
      CVP_LOCATION_CODE: $(cvp-location-code)

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'playwright-report'
      artifact: 'PlaywrightHTMLReport'
      publishLocation: 'pipeline'
    displayName: 'Publish Playwright HTML Report and assets'
    condition: succeededOrFailed()